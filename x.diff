index 0c480f8..283d486 100644
--- a/simple_cmux_client/components/esp_modem/src/esp_modem_cmux.cpp
+++ b/simple_cmux_client/components/esp_modem/src/esp_modem_cmux.cpp
@@ -120,13 +120,17 @@ void CMux::data_available(uint8_t *data, size_t len)
         if (virtual_term < MAX_TERMINALS_NUM && read_cb[virtual_term]) {
             // Post partial data (or defragment to post on CMUX footer)
 #ifdef DEFRAGMENT_CMUX_PAYLOAD
-            if (payload_start == nullptr) {
-                payload_start = data;
-                total_payload_size = 0;
+            if (virtual_term == 0) {   // no need to defragment term network data (term=0), PPP takes care of that
+                read_cb[virtual_term](data, len);
+            } else {
+                if (payload_start == nullptr) {
+                    payload_start = data;
+                    total_payload_size = 0;
+                }
+                total_payload_size += len;
             }
-            total_payload_size += len;
 #else
-            read_cb[virtual_term](data, len);
+
 #endif
         }
     } else if (data == nullptr && type == 0x73 && len == 0) { // notify the initial SABM command
@@ -136,7 +140,9 @@ void CMux::data_available(uint8_t *data, size_t len)
         int virtual_term = dlci - 1;
         if (virtual_term < MAX_TERMINALS_NUM && read_cb[virtual_term]) {
 #ifdef DEFRAGMENT_CMUX_PAYLOAD
-            read_cb[virtual_term](payload_start, total_payload_size);
+            if (payload_start) {
+                read_cb[virtual_term](payload_start, total_payload_size);
+            }
 #endif
         }
     } else if ((type & FT_UIH) == FT_UIH && dlci == 0) { // notify the internal DISC command
